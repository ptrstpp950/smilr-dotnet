/*
 * Smilr API
 *
 * Smilr microservice, RESTful data API
 *
 * OpenAPI spec version: 6.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text.Json;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using ProblemDetails = IO.Swagger.Models.ProblemDetails;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class MiscApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>This returns health / info</remarks>
        /// <response code="200">An array of events</response>
        [HttpGet]
        [Route("/api/info")]
        [ValidateModelState]
        [SwaggerOperation("ApiInfoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(HealthInfo), description: "An array of events")]
        public virtual IActionResult ApiInfoGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HealthInfo));

            string exampleJson = null;
            exampleJson = "{\n  \"debug\" : \"{}\",\n  \"debug.nodeInfo\" : \"{}\",\n  \"debug.runtimeInfo\" : \"{}\",\n  \"releaseID\" : \"releaseID\",\n  \"debug.hostInfo\" : \"{}\",\n  \"description\" : \"smilr-data-api\",\n  \"version\" : \"6.2.0\",\n  \"debug.mongoInfo\" : \"{}\",\n  \"status\" : \"pass\"\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<HealthInfo>(exampleJson)
            : default(HealthInfo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Bulk load events and feedback</remarks>
        /// <param name="bulk">Bulk payload</param>
        /// <response code="200">Status message</response>
        /// <response code="500">Unexpected error</response>
        [HttpPost]
        [Route("/api/bulk")]
        [ValidateModelState]
        [SwaggerOperation("BulkLoad")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Unexpected error")]
        public virtual IActionResult BulkLoad([FromBody]Bulk bulk)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ProblemDetails));


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>This returns health / info</remarks>
        /// <response code="200">An array of events</response>
        [HttpGet]
        [Route("/api/healthz")]
        [ValidateModelState]
        [SwaggerOperation("InfoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(HealthInfo), description: "An array of events")]
        public virtual IActionResult InfoGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HealthInfo));

            string exampleJson = null;
            exampleJson = "{\n  \"debug\" : \"{}\",\n  \"debug.nodeInfo\" : \"{}\",\n  \"debug.runtimeInfo\" : \"{}\",\n  \"releaseID\" : \"releaseID\",\n  \"debug.hostInfo\" : \"{}\",\n  \"description\" : \"smilr-data-api\",\n  \"version\" : \"6.2.0\",\n  \"debug.mongoInfo\" : \"{}\",\n  \"status\" : \"pass\"\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<HealthInfo>(exampleJson)
            : default(HealthInfo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
